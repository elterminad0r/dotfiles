" TODO: snippets, autocompletion

if v:progname =~? "evim"
  finish
endif

execute pathogen#infect()
filetype plugin indent on
autocmd FileType tex setlocal commentstring=%\ %s

if &compatible | set nocompatible | endif " Avoid side effects if `nocp` already set
set backspace=indent,eol,start
set history=50
set ruler
set showcmd
set incsearch
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
  noh
  noh
  syntax enable
  let g:solarized_termtrans = 1
  set background=dark
  colorscheme solarized
endif
set autoindent
if has('langmap') && exists('+langnoremap')
  set langnoremap
endif
packadd matchit

set nu
set relativenumber
set tabstop=4
set shiftwidth=4
set ignorecase
set infercase
set expandtab
set incsearch
" backspace key fix?
set t_kb=
set cryptmethod=blowfish2
set textwidth=80
set colorcolumn=+1
set mouse=a
map <LeftMouse> <nop>

set path+=**
set wildmenu

" preserves undo history for buffers
set hidden

set list
set listchars=tab:>-

highlight ExtraWhitespace ctermbg=darkgreen guibg=darkgreen
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/

" Persistent undo
set undofile
set undodir=$HOME/.vim/undo

" save 10000 levels of undo
set undolevels=10000
" cache entire buffers under 10000 lines
set undoreload=10000

au BufWritePost *.py,*.c,*.cpp,*.h,*.tex silent! !eval 'ctags -R -o newtags; mv -f newtags tags' &

set backup
set writebackup
set backupdir=~/.vim/backups

" '100: store marks for 100 previously edited files
" /100: store 100 previous searches
" :100: store 100 previous commands issued
" <1000000: store at most 1000000 lines of each buffer
" @1000: store 1000 lineso f input-line history
" s1000: allow items to be 10000 Kbyte in size
set viminfo=%,'100,/100,:100,<1000000,s10000,@1000,h,n~/.vim/viminfo

set directory^=~/.vim/swap

autocmd FileType latex,tex set spell spelllang=en_gb,nl

" Allow saving of files as sudo when I forgot to start vim using sudo.
command W w !sudo tee > /dev/null %
