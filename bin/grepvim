#!/usr/bin/env sh

# grep for a given pattern in file _names_, opening any matches in $EDITOR or
# vim.

set -eu

usage() {
    cat <<EOF
grepvim [-h|--help] FILENAME_PATTERN FILE [FILE...]
Search for the regular expression FILENAME_PATTERN in the names of given FILES.

Open any files with a matching name in \$EDITOR or vim.
EOF
}

# no need for anything so sophisticated as getopts. Furthermore, I like to be
# able to put -h after positional arguments.
for arg; do
    case "$arg" in
        "-h"|"--help")
            usage;
            exit 0;
            ;;
        "--")
            break;
            ;;
        "-"*)
            >&2 echo "unrecognised option: $arg";
            >&2 usage;
            exit 1;
            ;;
        *)
            ;;
    esac
done

if [ "$#" -le "1" ]; then
    >&2 echo "need files - did you want vimack?"
    >&2 usage
    exit 1
fi

pattern="$1"
shift

if grep --version | head -n 1 | grep -q GNU; then
    grepflags=-izZ
    xargsflags=-0
else
    >&2 echo "warning: grep not safe on newlines: hit Enter to continue"
    read -r
    grepflags=-i
    xargsflags=-d'\n'
fi

# wacky quoting on purpose, so empty variables are ignored
printf '%s\0' "$@" | grep $grepflags "$pattern" | vim-stdin $xargsflags
