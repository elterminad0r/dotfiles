#!/usr/bin/env sh

# grep for a pattern in given files' _contents_, opening all files with a match
# in $EDITOR or vim.

set -eu

usage() {
    cat <<EOF
vimgrep [-h|--help] PATTERN FILE [FILE...]
Search for the regular expression PATTERN in the contents of given FILES.

Open any files with matching contents in \$EDITOR or vim.
EOF
}

# no need for anything so sophisticated as getopts. Furthermore, I like to be
# able to put -h after positional arguments.
for arg; do
    case "$arg" in
        "-h"|"--help")
            usage;
            exit 0;
            ;;
        "--")
            break;
            ;;
        "-"*)
            >&2 echo "unrecognised option: $arg";
            >&2 usage;
            exit 1;
            ;;
        *)
            ;;
    esac
done

if [ "$#" -le "1" ]; then
    >&2 echo "need files - did you want vimack?"
    >&2 usage
    exit 1
fi

pattern="$1"
shift

if grep --version | head -n 1 | grep -q GNU; then
    grep -liZ "$pattern" "$@" |
        GOEDEL_VIMACK_SEARCH="$pattern" vim-stdin -0
else
    >&2 echo "warning: grep not safe on newlines: hit Enter to continue"
    read -r
    grep -li "$pattern" "$@" |
        tr '\n' '\0' |
        GOEDEL_VIMACK_SEARCH="$pattern" vim-stdin -0
fi
