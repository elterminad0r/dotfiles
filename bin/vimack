#!/usr/bin/env sh

# search recursively for a pattern in file contents *and* file names, and open
# matching files in $EDITOR or vim.

# The first argument, if present, is a regular expression (for whatever grep you
# have on your sytsem) to search for in files.

# The second argument, if present, is a similar regular expression to filter
# file names by.

# If either one is empty, it will match everything, as expected.

# Aims to be mostly functional if you have only POSIX utilities.

set -eu

usage() {
    cat <<EOF
vimack [-h|--help] [CONTENT_PATTERN [FILENAME_PATTERN]]
Search for the (grep) regular expression CONTENT_PATTERN recursively in current
directory, in files with names matching (the grep regex) FILENAME_PATTERN, if
given. An empty pattern matches everything.

Open any matching files in \$EDITOR or vim.
EOF
}

# no need for anything so sophisticated as getopts. Furthermore, I like to be
# able to put -h after positional arguments.
for arg; do
    case "$arg" in
        "-h"|"--help")
            usage;
            exit 0;
            ;;
        "--")
            break;
            ;;
        "-"*)
            >&2 echo "unrecognised option: $arg";
            >&2 usage;
            exit 1;
            ;;
        *)
            ;;
    esac
done

get_files_null() {
    if 1>&2 command -v rg; then
        rg -li0 "$content_pattern" | \
            grep -izZ "$filename_pattern"
    elif 1>&2 command -v ag; then
        ag -li0 "$content_pattern" | \
            grep -izZ "$filename_pattern"
    elif 1>&2 command -v ack; then
        ack -li --print0 "$content_pattern" | \
            grep -izZ "$filename_pattern"
    else
        >&2 echo "Going old-school"
        find . -name .git -prune -type f -print0 | \
            grep -izZ "$filename_pattern" | \
            xargs -0 grep -liZ "$content_pattern" | \
            sort -z
    fi
}

get_files_notnull() {
    if 1>&2 command -v rg; then
        rg -li "$content_pattern" | \
            grep -i "$filename_pattern"
    elif 1>&2 command -v ag; then
        ag -li "$content_pattern" | \
            grep -i "$filename_pattern"
    elif 1>&2 command -v ack; then
        ack -li "$content_pattern" | \
            grep -i "$filename_pattern"
    else
        >&2 echo "Going old-school"
        find . -name .git -prune -type f | \
            grep -i "$filename_pattern" | \
            xargs -0 grep -li "$content_pattern" | \
            tr '\n' '\0' | \
            sort
    fi
}

content_pattern="${1:-}"
filename_pattern="${2:-}"

if grep --version | head -n 1 | grep -q GNU &&
   sort --version | head -n 1 | grep -q GNU; then
    get_files_null | \
        GOEDEL_VIMACK_SEARCH="$content_pattern" vim-stdin -0
else
    >&2 echo "warning: grep not safe on newlines: hit Enter to continue"
    read -r
    get_files_notnull | \
        GOEDEL_VIMACK_SEARCH="$content_pattern" vim-stdin -0
fi
