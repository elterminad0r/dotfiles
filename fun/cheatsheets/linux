SIGINT is the interrupt signal. The terminal sends it to the foreground process
when the user presses ctrl-c. The default behavior is to terminate the process,
but it can be caught or ignored. The intention is to provide a mechanism for an
orderly, graceful shutdown.

SIGQUIT is the dump core signal. The terminal sends it to the foreground process
when the user presses ctrl-\. The default behavior is to terminate the process
and dump core, but it can be caught or ignored. The intention is to provide a
mechanism for the user to abort the process. You can look at SIGINT as
"user-initiated happy termination" and SIGQUIT as "user-initiated unhappy
termination."

SIGTERM is the termination signal. The default behavior is to terminate the
process, but it also can be caught or ignored. The intention is to kill the
process, gracefully or not, but to first allow it a chance to cleanup.

SIGKILL is the kill signal. The only behavior is to kill the process,
immediately. As the process cannot catch the signal, it cannot cleanup, and thus
this is a signal of last resort.

SIGSTOP is the pause signal. The only behavior is to pause the process; the
signal cannot be caught or ignored. The shell uses pausing (and its counterpart,
resuming via SIGCONT) to implement job control.


Since .zshenv is always sourced, it often contains exported variables that
should be available to other programs. For example, $PATH, $EDITOR, and $PAGER
are often set in .zshenv. Also, you can set $ZDOTDIR in .zshenv to specify an
alternative location for the rest of your zsh configuration.  .zshrc is for
interactive shell configuration. You set options for the interactive shell there
with the setopt and unsetopt commands. You can also load shell modules, set your
history options, change your prompt, set up zle and completion, et cetera. You
also set any variables that are only used in the interactive shell (e.g.
$LS_COLORS).  .zlogin is sourced on the start of a login shell. This file is
often used to start X using startx. Some systems start X on boot, so this file
is not always very useful.  .zprofile is basically the same as .zlogin except
that it's sourced directly before .zshrc is sourced instead of directly after
it. According to the zsh documentation, ".zprofile is meant as an alternative to
`.zlogin' for ksh fans; the two are not intended to be used together, although
this could certainly be done if desired." .zlogout is sometimes used to clear
and reset the terminal.

